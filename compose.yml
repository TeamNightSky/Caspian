services:
  caspian_api:
    container_name: caspian-api
    image: teamnightsky/caspian-api:dev
    build:
      context: .
      target: caspian_api
    volumes:
      - ./api:/app/api
      - ./logs:/app/logs
      - ./docker/volumes/downloads:/app/downloads
      - ./docker/volumes/api:/var/lib/kong
    restart: unless-stopped
    ports:
      - ${CASPIAN_PORT}:${CASPIAN_PORT}/tcp
    environment:
      CASPIAN_PORT: ${CASPIAN_PORT}
      SUPABASE_KEY: ${SERVICE_ROLE_KEY}
      ANON_KEY: ${ANON_KEY}
      SUPABASE_URL: ${SUPABASE_URL}
      CASPIAN_DEBUG: ${CASPIAN_DEBUG}
      CASPIAN_PUBLIC: ${CASPIAN_PUBLIC}
      CASPIAN_DOMAIN: ${EXTERNAL_DOMAIN}
      CELERY_BACKEND_URL: redis://celery_backend:6379/0
      CELERY_BROKER_URL: amqp://celery_broker:5672
      CELERY_RESULT_BACKEND_URL: redis://celery_backend:6379/0
      POSTGRES_URL: ${POSTGRES_URL}
      JWT_SECRET: ${JWT_SECRET}
    extra_hosts:
      - "host.docker.internal:host-gateway"


  caspian_worker:
    build:
      context: .
      target: caspian_worker
    image: teamnightsky/caspian-worker:dev
    volumes:
      - ./api:/app/api
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URL: ${POSTGRES_URL}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SERVICE_ROLE_KEY}
      STORAGE_URL: http://storage:5000
      CELERY_BACKEND_URL: redis://celery_backend:6379/0
      CELERY_BROKER_URL: amqp://celery_broker:5672
      CELERY_RESULT_BACKEND_URL: redis://celery_backend:6379/0
    depends_on:
      - celery_broker
      - celery_backend

  celery_backend:
    restart: always
    image: "redis:latest"
    ports:
      - "6379:6379"

  celery_broker:
    restart: always
    image: "rabbitmq:latest"
    ports:
      - "5672:5672"
